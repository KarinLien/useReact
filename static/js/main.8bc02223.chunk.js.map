{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","data","forTest","forTestPeach","Step1","Step2","step3","asyncFetch","_callee","response","regenerator_default","a","wrap","_context","prev","next","fetch","sent","json","_this","setState","console","log","t0","stop","this","try","arguments","length","undefined","setFunc","set","Set","forEach","x","add","delete","has","mapFunc","map","Map","sayHi","myMap","foo","gen","got","_context2","forOfLoop","_marked","mark","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","chr","value","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","che","_context3","abrupt","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","v","SpreadAndRest","b","c","_len2","d","Array","_key2","include","_len3","_key3","includes","g","symbol","info1","Object","defineProperty","name","age","job","info2","assign","promiseTest","NanShen","obj","Math","random","success","error","names","index","first","request","Request","iterableTest","key","object","person","result","objectSpread","getAirSpeed","getWaterSpeed","hashMap","APPLE","BANANA","twoSum","num","i","j","becomesBanana","becomesApple","Step3","_this2","array","style","background","margin","display","padding","react_default","createElement","className","onClick","apply","concat","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8bc02223.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    data: {},\n    forTest: \"APPLE\",\n    forTestPeach: \"PEACH\",\n    Step1: true,\n    Step2: false,\n    step3: false\n  };\n  asyncFetch = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3000/posts\");\n      const data = await response.json();\n      this.setState({\n        data\n      });\n      console.log(data);\n    } catch (err) {\n      console.log(\"fetch failed\", err);\n    }\n  };\n  try = (a, b = 3) => {\n    return a + b;\n  };\n  setFunc = () => {\n    const set = new Set();\n    const data = [2, 3, 5, 4, 5, 2, 2];\n    data.forEach(x => set.add(x));\n    set\n      .add(1)\n      .add(2)\n      .add(6);\n    set.delete(2); //刪除2\n    set.has(2); // false  (沒有數值2)\n    console.log(set);\n  };\n  mapFunc = () => {\n    let map = new Map();\n    // 可以使用 set() 方法設置資料內容\n    map.set(\"first\", 1);\n    map.set(10, \"ten\");\n    map.set({ sayHi: \"Hi\" }, \"obj\");\n    console.log(\"map:\", map);\n    var kvArray = [[\"key1\", \"value1\"], [\"key2\", \"value2\"]];\n    var myMap = new Map(kvArray);\n    console.log(\"myMap:\", myMap);\n    // 顯示 Map {\"key1\" => \"value1\", \"key2\" => \"value2\"}\n  };\n  foo = function* gen() {\n    console.log(\"start\");\n    var got = yield \"called\";\n    console.log(got);\n  };\n\n  forOfLoop = () => {\n    const data = this.state.data;\n    console.log(data);\n    for (let chr of \"😺😲\") {\n      console.log(chr);\n    }\n    for (let chr of \"あいうえおかきくけこ\") {\n      console.log(chr);\n    }\n\n    for (let che of data) {\n      console.log(che); // ANS:{...}※沒有Array.from 不能for...of\n    }\n\n    function* foo() {\n      yield 1;\n      yield 2;\n      yield 3;\n      yield 4;\n      yield 5;\n      return 6;\n    }\n    for (let v of foo()) {\n      console.log(v); //ANS:1,2,3,4,5\n    }\n  };\n\n  SpreadAndRest = (a, b, c, ...d) => {\n    console.log(\"a\", a);\n    console.log(\"b\", b);\n    console.log(\"c\", c);\n    console.log(\"d\", d);\n  };\n  include = (...b) => {\n    console.log(b.includes(\"pink\")); //true\n    let include = b.includes(\"black\");\n    var g = this.foo();\n    var a = g.next();\n    console.log(a);\n    console.log(g.next(\"hello generator\"));\n    if (include) {\n      console.log(\"trueee\");\n    } else {\n      console.log(\"falseeee\");\n    }\n  };\n  symbol = () => {\n    let info1 = {\n      name: \"婷婷\",\n      age: 24,\n      job: \"公司前台\",\n      [Symbol(\"description\")]: \"平时喜欢做做瑜伽，人家有男朋友，你别指望了\"\n    };\n    let info2 = {\n      [Symbol(\"description\")]: \"这小姑娘挺好的，挺热情的\"\n    };\n    let target = {};\n    console.log(Object.assign(target, info1, info2));\n    // let s1 = Symbol(\"foo\");\n    // let s2 = Symbol(\"bar\");\n    // let s3 = Symbol();\n    // let s3Symbol = {\n    //   [s3]: \"hellooooooooo\"\n    // };\n    // console.log(\"s3Symbol\", s3Symbol);\n    // console.log(\"s1toString:\", s1.toString());\n    // console.log(\"s2notoString:\", s2);\n  };\n  promiseTest = () => {\n    var NanShen = {\n      身高: 180,\n      體重: 80,\n      年薪: \"200K\",\n      request: function(obj) {\n        //攻略長輩成功與否隨機決定\n        // 成功概率為80%\n        if (Math.random() > 0.2) {\n          obj.success();\n        } else {\n          obj.error();\n        }\n      }\n    };\n\n    var Request = function(names, success) {\n      var index = 0,\n        first = 0;\n      var request = function() {\n        if (names[index]) {\n          NanShen.request({\n            name: names[index],\n            success: function() {\n              first = 0;\n              console.log(\"成功拿下\" + names[index]);\n              index++;\n              request();\n            },\n            error: function() {\n              if (first === 1) {\n                console.log(\"依舊沒能拿下\" + names[index] + \"，求婚失敗\");\n                return;\n              } else {\n                console.log(\"沒能拿下\" + names[index] + \"，再試一次\");\n              }\n              first = 1;\n              request();\n            }\n          });\n        } else {\n          success();\n        }\n      };\n\n      request();\n    };\n\n    Request([\"岳父\", \"大伯\", \"大姑\"], function() {\n      NanShen.request({\n        name: \"女神\",\n        success: function() {\n          console.log(\"女神同意，求婚成功！\");\n        },\n        error: function() {\n          console.log(\"女神不同意，求婚失敗！\");\n        }\n      });\n    });\n  };\n  iterableTest = () => {\n    // let arr = [\"Alice\", \"Bob\", \"Carol\"];\n    // let mapping = {\n    //   foo: \"bar\"\n    // };\n    // console.log(new Set(Object.keys(mapping))); //----{\"foo\"}\n    // let iterator = arr[Symbol.iterator]();\n    // console.log(iterator.next()); //{value: \"Alice\", done: false}\n    // console.log(iterator.next()); //{value: \"Bob\", done: false}\n    // console.log(iterator.next()); //{value: \"Carol\", done: false}\n    // console.log(iterator.next()); //{value: \"undefined\", done: true}\n\n    const pureAssoc = (key, value, object) => ({\n      ...object,\n      [key]: value\n    });\n    const person = {\n      name: \"Bobo\"\n    };\n    const result = pureAssoc(\"shoeSize\", 400, person);\n    console.log({\n      person, //{name: \"Bobo\"}\n      result //{name: \"Bobo\", shoeSize: 400}\n    });\n  };\n  getAirSpeed = () => {\n    console.log(\"getAirSpeed func state forTest is APPLE\");\n  };\n  getWaterSpeed = () => {\n    console.log(\"getWaterSpeed func state forTest is BANANA\");\n  };\n  hashMap = state => {\n    // switch (state) {\n    //   case \"APPLE\":\n    //     return this.getAirSpeed();\n    //   case \"BANANA\":\n    //     return this.getWaterSpeed();\n    //   default:\n    //     return;\n    // }\n\n    // ----------- 相等於SWITCH CASE\n\n    var data = {\n      APPLE: this.getAirSpeed, // key:value\n      BANANA: this.getWaterSpeed\n    };\n    return data[state]();\n  };\n  twoSum = () => {\n    //num[0],num[1] === target\n    //回傳 [0,1]\n    const num = [2, 7, 11, 15];\n    const target = 9;\n    for (let i = 0; i < num.length; i++) {\n      for (let j = i + 1; j < num.length; j++) {\n        if (num[i] + num[j] === target) {\n          console.log([i, j]);\n        }\n      }\n    }\n  };\n  becomesBanana = () => {\n    this.setState({\n      forTest: \"BANANA\"\n    });\n  };\n  becomesApple = () => {\n    this.setState({\n      forTest: \"APPLE\"\n    });\n  };\n  Step1 = () => {\n    this.setState({\n      Step1: true,\n      Step2: false,\n      step3: false\n    });\n  };\n  Step2 = () => {\n    this.setState({\n      Step1: false,\n      Step2: true,\n      Step3: false\n    });\n  };\n  Step3 = () => {\n    this.setState({\n      Step1: false,\n      Step2: false,\n      Step3: true\n    });\n  };\n  render() {\n    const array = [\"pinkkkk\", \"whiteeee\", \"yellowwww\"];\n    // const arr = [1, 2, 3, 4, 5];\n    // console.log(...array);\n    // console.dir(arr);\n    // const abbc = {\n    //   he: \"he\",\n    //   do: () => {\n    //     console.log(\"dothis\", this); //window\n    //     return \"aaaaahrelo\";\n    //   },\n    //   happy() {\n    //     console.log(\"happythis\", this); //abba\n    //     return \"aaaaaaaahappy\";\n    //   }\n    // };\n    let style = state => ({\n      background: state ? \"darkseagreen\" : \"burlywood\",\n      margin: \"10px\",\n      display: \"inline-block\",\n      padding: \"20px\"\n    });\n    // console.log(abbc.do());\n    // console.log(abbc.happy());\n\n    return (\n      <div className=\"App\">\n        <div className=\"divv\">\n          <p onClick={this.asyncFetch}>Hello fetch func</p>\n          <p>\n            b預設值=3\n            <br />\n            傳入a=1,b=5 ANS:{this.try(1, 5)}\n            <br />\n            只傳入a=1 ANS:{this.try(1)}\n          </p>\n          <p onClick={this.setFunc}>SetFunc</p>\n          <p onClick={this.mapFunc}>MapFunc</p>\n          <p onClick={this.forOfLoop}>forOfLoopFunc</p>\n          <p\n            onClick={() =>\n              this.SpreadAndRest(...array, [\"あか\", \"ブルー\", \"みどり\"])\n            }\n          >\n            Spread/Rest Operator\n          </p>\n          <p\n            onClick={() => this.include(...array, [\"あか\", \"ブルー\", \"みどり\"])}\n          >\n            include\n          </p>\n          <p onClick={this.symbol}>symbol</p>\n          <p onClick={this.promiseTest}>promise</p>\n          <p onClick={this.iterableTest}>iterable</p>\n          <p onClick={this.becomesBanana}>becomesBanana</p>\n          <p onClick={this.becomesApple}>becomesApple</p>\n          <p onClick={() => this.hashMap(this.state.forTest)}>hashMap</p>\n          <p onClick={this.twoSum}>twoSum</p>\n          <p onClick={this.Step1}>OPENSTEP1</p>\n          <p onClick={this.Step2}>OPENSTEP2</p>\n          <p onClick={this.Step3}>OPENSTEP3</p>\n          <div>\n            <div style={style(this.state.Step1)}>STEP1</div>\n            <div style={style(this.state.Step2)}>STEP2</div>\n            <div style={style(this.state.Step3)}>STEP3</div>\n          </div>\n          <p>STEP4</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}